{"version":3,"sources":["hoc/withAuthRedirect.js","Redux/DialogsReducer.js","Components/Common/Preloader/Preloader.module.css","Components/Nav/Nav.module.css","Components/Common/Paginator/Paginator.module.css","Components/Users/Users.module.css","api/api.js","reportWebVitals.js","Redux/AuthReducer.js","Redux/AppReducer.js","Components/Login/Login.jsx","Components/Nav/Friend.jsx","Components/Nav/Sidebar.jsx","Components/Nav/SidebarContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Utils/objectHelpers.js","Redux/UsersReducer.js","Components/Common/Paginator/Paginator.jsx","Components/Assets/Images/profile-icon-png-912.png","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/usersSelectors.js","Components/Users/UsersContainer.jsx","Redux/SidebarReducer.js","Redux/ReduxStore.js","hoc/withSuspense.js","App.js","index.js","Components/FormsControls/FormsControls.js","Components/Assets/Infinity-1.1s-200px.svg","Components/Common/Preloader/Preloader.js","Components/FormsControls/FormsControls.module.css","Components/Header/Header.module.css","Utils/Validators/validator.js","Redux/ProfileReducer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","personData","id","name","img","messageData","message","sendMessageActionCreator","newMessageBody","type","dialogsReducer","action","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","unfollowAPI","userId","delete","followAPI","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_AUTH_USER_DATA","isFetching","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","requiredField","className","s","formSummeryError","errorMessage","messages","length","stopSubmit","_error","formData","Friend","friend","src","alt","Sidebar","quicklist","sidebarData","qiuckfriends","map","f","nav","item","activeClassName","activeLink","list","SidebarContainer","sidebar","Header","header","UserName","onClick","loginBlock","HeaderContainer","updateObjectInArray","items","itemsId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROCESS","users","postText","usersCount","followingProcess","acceptFollow","acceptUnfollow","toggleIsFetching","toggleFollowingProcess","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","totalCount","filter","Paginator","itemsCount","onPageChange","portionSize","totalPages","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","selectedPage","User","user","follow","unfollow","photos","small","userPhoto","avatar","disabled","some","Users","getUsers","createSelector","usersPage","getPageSize","getUsersCount","getCurrentPage","getIsFetching","getFollowingProcess","getIsAuth","UsersClass","pageNumber","setCurrentPage","Preloader","compose","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","UsersContainer","AppContainer","withRouter","promise","Promise","all","MainApp","document","title","ReactDOM","StrictMode","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","child","placeholder","component","validators","text","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","UPDATE_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesnumber","profile","addPostActionCreator","setStatus","getUserProfile","updatePostTextActionCreator","newText","postId"],"mappings":"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","file":"static/js/main.85bb3fc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    personData: [\r\n        { id: 1, name: 'Maksim', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 2, name: 'Ivan', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 3, name: 'Katya', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 4, name: 'Bogdan', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 5, name: 'Diana', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 6, name: 'Ellie', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 7, name: 'Sasha', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' }\r\n    ],\r\n    messageData: [\r\n        { id: 1, message: 'Hey!' },\r\n        { id: 2, message: 'How do you do?' },\r\n        { id: 3, message: \"I've just arrived to Ukraine!\" },\r\n        { id: 4, message: 'Are you here?' }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, { id: 6, message: action.newMessageBody }],\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1D9cA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__25dp-\",\"item\":\"Nav_item__2dwaG\",\"activeLink\":\"Nav_activeLink__2AMMi\",\"list\":\"Nav_list__3KVWT\",\"friend\":\"Nav_friend__1hJyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1TXSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__1BBdl\"};","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '013ca442-f11a-42ca-a9f9-8bea632fee4b'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    unfollowAPI(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    followAPI(userId) {\r\n        return instance.post(`follow/${userId}`, {},);\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`/auth/login`, { email, password, rememberMe },).then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete (`/auth/login`);\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let errorMessage = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: errorMessage}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./AuthReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\nexport default appReducer;","import React from \"react\"\r\nimport s from \"./../FormsControls/FormsControls.module.css\"\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../Utils/Validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if(props.isAuth) {return <Redirect to={\"/profile\"}/>}\r\n    return <div>\r\n        <h1>Login page</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst LoginForm = ({handleSubmit,error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField(\"text\", \"Email\", \"email\", Input, [requiredField] )}\r\n        {createField(\"password\", \"Password\", \"password\", Input, [requiredField] )}\r\n        {createField(\"checkbox\", \"\", \"rememberMe\", Input, [], \"remember me\" )}\r\n    <div>\r\n        {error && <div className={s.formSummeryError}>{error}</div>}\r\n        <button>Login</button>\r\n    </div>\r\n</form>\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\nconst mapStateToProps = (state)=>({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login)","import React from 'react';\r\nimport s from './Nav.module.css'\r\n\r\nconst Friend =(props)=> {    \r\n    return(<div className={s.friend}><img src={props.img} alt=\"\"/>\r\n            <p>{props.name}</p>\r\n            </div>\r\n)\r\n}\r\n\r\nexport default Friend;","import React from 'react'\r\nimport s from './Nav.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Friend from './Friend';\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let quicklist = props.sidebarData.qiuckfriends.map(f => <Friend name={f.name} id={f.id} img={f.img} />);\r\n\r\n    return (<nav className={s.nav}>\r\n        <div>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <br />\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div><div>\r\n                <div>Friends</div>\r\n                <div className={s.list}>{quicklist}</div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n\r\n}\r\nexport default Sidebar;","import React from 'react'\r\nimport Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        sidebarData: state.sidebar,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (<header className={s.header}>\r\n            <img src=\"https://www.designyourway.net/blog/wp-content/uploads/2018/04/gray_wolf_games_-_logo.jpg\"/>\r\n\r\n            {props.isAuth ?\r\n                <div className={s.UserName}>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                :\r\n                <NavLink to={'/login'}>\r\n                    <div className={s.loginBlock}>Log in</div>\r\n                </NavLink>}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/AuthReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","export let updateObjectInArray = (items, itemsId, objPropName,newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemsId) return {...u, ...newObjProps};\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROCESS = 'TOGGLE_IS_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    postText: 'sth',\r\n    pageSize: 11,\r\n    usersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProcess: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case\r\n        UNFOLLOW:\r\n            return {\r\n                ...state, users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case\r\n        SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case\r\n        SET_TOTAL_USERS_COUNT: {\r\n            return {...state, usersCount: action.totalCount}\r\n        }\r\n        case\r\n        SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case\r\n        TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case\r\n        TOGGLE_IS_FOLLOWING_PROCESS: {\r\n            return {\r\n                ...state, followingProcess: action.isFetching\r\n                    ? [...state.followingProcess, action.userId]\r\n                    : state.followingProcess.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const acceptFollow = (userId) => ({type: FOLLOW, userId})\r\nexport const acceptUnfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProcess = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROCESS, isFetching, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProcess(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(toggleFollowingProcess(false, userId))\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n        return async (dispatch) => {\r\n            dispatch(toggleIsFetching(true));\r\n            let data = await usersAPI.requestUsers(currentPage, pageSize)\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        }\r\n    }\r\n;\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.followAPI, acceptFollow);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollowAPI, acceptUnfollow);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\n\r\nconst Paginator = ({itemsCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\r\n    let totalPages = Math.ceil(itemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(totalPages / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>←</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n            return <span className={currentPage === p && s.selectedPage}\r\n                         onClick={() => onPageChange(p)}>{p} </span>\r\n        })}{portionNumber < portionCount && <button onClick={() =>\r\n        setPortionNumber(portionNumber + 1)}>→</button>}\r\n    </div>\r\n}\r\nexport default Paginator;\r\n","export default __webpack_public_path__ + \"static/media/profile-icon-png-912.4af05d7f.png\";","import React from \"react\";\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../Assets/Images/profile-icon-png-912.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingProcess, follow, unfollow}) => {\r\n    return (<div>\r\n                    <span>\r\n                        <div><NavLink to={'profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.avatar}\r\n                                 alt={\"\"}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={followingProcess.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              unfollow(user.id)\r\n                                          }}>Unfollow</button>\r\n                                : <button disabled={followingProcess.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              follow(user.id)\r\n                                          }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                {/*<div>{user.location.country}</div>\r\n                        <div>{user.location.city}</div>*/}\r\n                <span>\r\n\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({users, currentPage, usersCount, onPageChange, pageSize, followingProcess, follow, unfollow}) => {\r\n    return (<div>\r\n            <Paginator currentPage={currentPage} itemsCount={usersCount} onPageChange={onPageChange}\r\n                       pageSize={pageSize}\r\n            />\r\n            {users.map(u => <User user={u} key={u.id} followingProcess={followingProcess} follow={follow}\r\n                                  unfollow={unfollow}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getUsersCount = (state) => {\r\n    return state.usersPage.usersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingProcess = (state) => {\r\n    return state.usersPage.followingProcess;\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProcess,\r\n    requestUsers,\r\n}\r\n    from \"../../Redux/UsersReducer\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingProcess, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize, getUsers,\r\n    getUsersCount\r\n} from \"../../Redux/usersSelectors\";\r\n\r\nclass UsersClass extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n        this.props.setCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n        let totalPages = Math.ceil(this.props.usersCount / this.props.pageSize);\r\n        let pages = [];\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(i);\r\n        }\r\n        return <>\r\n            {this.props.isFetching && <Preloader/>}\r\n            <Users users={this.props.users}\r\n                   pageSize={this.props.pageSize}\r\n                   usersCount={this.props.usersCount}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChange={this.onPageChange}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingProcess={this.props.followingProcess}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        usersCount: state.usersPage.usersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProcess: state.usersPage.followingProcess,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        usersCount: getUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProcess: getFollowingProcess(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n            follow, unfollow, setCurrentPage,\r\n            toggleFollowingProcess, requestUsers\r\n        }\r\n    )\r\n)(UsersClass)","let initialState = {\r\n    qiuckfriends: [\r\n        { id: 1, name: 'Andrew', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 2, name: 'Sveta', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' },\r\n        { id: 3, name: 'Vika', img: 'https://flyclipart.com/thumb2/person-icons-131310.png' }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer; ","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./DialogsReducer\";\r\nimport profileReducer from \"./ProfileReducer\";\r\nimport sidebarReducer from \"./SidebarReducer\";\r\nimport usersReducer from \"./UsersReducer\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport appReducer from \"./AppReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from \"react\";\r\nimport {Preloader} from \"../Components/Common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}><Component {...props}/></React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport {Preloader} from \"./Components/Common/Preloader/Preloader\";\r\nimport {HashRouter, Route, withRouter} from 'react-router-dom'\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/AppReducer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport './App.css';\r\nimport SidebarContainer from './Components/Nav/SidebarContainer.jsx';\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport UsersContainer from './Components/Users/UsersContainer';\r\nimport store from \"./Redux/ReduxStore\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <SidebarContainer/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)\r\n                    }/>\r\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default MainApp;","import React from 'react';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from \"./App\";\r\n\r\ndocument.title = \"SocialNetwork\";\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n<MainApp/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\nreportWebVitals();","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    let hasError = touched && error;\r\n    return <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        <div>{hasError && <span>{error}</span>}</div>\r\n    </div>\r\n}\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea{...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl{...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\nexport const createField = (type, placeholder, name, component, validators, text) => {\r\n    return <div><Field type={type} placeholder={placeholder} name={name} component={component}\r\n                       validate={validators}/>{text}</div>\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Infinity-1.1s-200px.1d33669b.svg\";","import React from \"react\";\r\nimport s from './Preloader.module.css'\r\nimport preloader from \"../../Assets/Infinity-1.1s-200px.svg\";\r\n\r\nexport const Preloader = (props) => {\r\n    return <div><img src={preloader} className={s.Preloader}/></div>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1lveK\",\"error\":\"FormsControls_error__3Kf9w\",\"formSummeryError\":\"FormsControls_formSummeryError__2JFw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__TbTQj\",\"UserName\":\"Header_UserName__34NVN\",\"loginBlock\":\"Header_loginBlock__FORN9\"};","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    else return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    else return undefined\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_POST_TEXT = 'UPDATE-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hey', likesnumber: 18},\r\n        {id: 2, message: \"What's up?\", likesnumber: 21},\r\n        {id: 3, message: 'BlaBla', likesnumber: 13}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.postText, likesnumber: 0}],\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId),\r\n            }\r\n        }\r\n        case UPDATE_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                postText: action.newText,\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (postText) => ({type: ADD_POST, postText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status: status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const updatePostTextActionCreator = (text) => ({\r\n    type: UPDATE_POST_TEXT, newText: text\r\n})\r\n\r\nexport default profileReducer;"],"sourceRoot":""}