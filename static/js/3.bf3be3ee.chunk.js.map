{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Myposts/Myposts.module.css","Components/Profile/Myposts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/MyPosts.jsx","Components/Profile/Myposts/MypostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","s","info","description","src","photos","large","aboutMe","Preloader","Post","style","item","alt","message","likesnumber","MyPosts","memo","console","log","maxLength70","maxLengthCreator","postElement","posts","reverse","map","p","id","PostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","requiredField","values","addPost","postText","MypostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","onPostChange","text","action","updatePostTextActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bf3be3ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__1fuDb\",\"description\":\"ProfileInfo_description__3G2Qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Myposts_posts__2_9n-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PRgy\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        status: this.props.status\r\n    };\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.state.editMode\r\n                ? <div><input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                              value={this.state.status}/></div>\r\n                : <div><span onDoubleClick={this.activateEditMode}>{this.props.status || \"No Status\"}</span></div>\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        {editMode\r\n            ? <div><input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/></div>\r\n            : <div><span onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span></div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.info}>\r\n           {/* <div>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/4/45/Wide_lightning.jpg\" width='95%'/>\r\n            </div>*/}\r\n            <div className={s.description}>\r\n                <img src={props.profile.photos.large}/>\r\n                <p>{props.profile.aboutMe}</p>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                avatar + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (<div className={style.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTUjtdeOsoKOYUO7ie8SZMlxfHKtQBMf7l0Wg&usqp=CAU\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            {props.likesnumber}\r\n            <button/>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../Utils/Validators/validator\";\r\nimport {Textarea} from \"../../FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n        console.log('render')\r\n        let maxLength70 = maxLengthCreator(70)\r\n        let postElement = [...props.posts].reverse().map(p => <Post id={p.id} message={p.message} likesnumber={p.likesnumber}/>);\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.postText)\r\n        }\r\n        const PostsForm = (props) => {\r\n            return <form onSubmit={props.handleSubmit}>\r\n                <Field component={Textarea} placeholder=\"Enter post text\" name=\"postText\"\r\n                       validate={[requiredField, maxLength70]}/>\r\n                {/*<Field ref={newPost} onChange={onPostChange} value={props.postText} />*/}\r\n                <button>Add post</button>\r\n            </form>\r\n        }\r\n        const PostsFormRedux = reduxForm({form: \"postsFormRedux\"})(PostsForm)\r\n        return (<div className={s.posts}>\r\n                My posts\r\n                <PostsFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postElement}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator, updatePostTextActionCreator } from '../../../Redux/ProfileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postText: state.profilePage.postText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText))\r\n        },\r\n        onPostChange: (text) => {\r\n            let action = updatePostTextActionCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MypostsContainer;","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './Myposts/MypostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (<div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../Redux/ProfileReducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)\r\n(ProfileContainer);"],"sourceRoot":""}